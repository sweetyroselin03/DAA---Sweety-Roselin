import heapq

def kClosest(points, k):
    max_heap = []
    
    for point in points:
        x, y = point
        dist = -(x*x + y*y)
        if len(max_heap) < k:
            heapq.heappush(max_heap, (dist, point))
        else:
            heapq.heappushpop(max_heap, (dist, point))
    
    return [point for _, point in max_heap]

# Example inputs and outputs
print(kClosest([[1, 3], [-2, 2], [5, 8], [0, 1]], 2))
print(kClosest([[1, 3], [-2, 2]], 1))
print(kClosest([[3, 3], [5, -1], [-2, 4]], 2))
