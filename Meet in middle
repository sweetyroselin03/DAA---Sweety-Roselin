from itertools import combinations

def get_subset_sums(arr):
    subset_sums = set()
    for r in range(len(arr) + 1):
        for combo in combinations(arr, r):
            subset_sums.add(sum(combo))
    return subset_sums

def meet_in_the_middle(arr, target):
    n = len(arr)
    mid = n // 2
    
    left_half = arr[:mid]
    right_half = arr[mid:]
    
    left_sums = get_subset_sums(left_half)
    right_sums = get_subset_sums(right_half)
    
    for left_sum in left_sums:
        if (target - left_sum) in right_sums:
            return True
    
    return False

# Example inputs
print(meet_in_the_middle([1, 3, 9, 2, 7, 12], 15))  # Output: True
print(meet_in_the_middle([3, 34, 4, 12, 5, 2], 15))  # Output: True
