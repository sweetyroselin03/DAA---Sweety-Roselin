def findPaths(m, n, N, i, j):
    dp = [[[0] * (N + 1) for _ in range(n)] for _ in range(m)]
    dp[i][j][0] = 1
    MOD = 10**9 + 7
    result = 0

    for step in range(1, N + 1):
        temp = [[[0] * (N + 1) for _ in range(n)] for _ in range(m)]
        for x in range(m):
            for y in range(n):
                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < m and 0 <= ny < n:
                        temp[x][y][step] = (temp[x][y][step] + dp[nx][ny][step - 1]) % MOD
                    else:
                        result = (result + dp[x][y][step - 1]) % MOD
        dp = temp
    return result
# Input and output examples:
# Example 1
m = 2
n = 2
N = 2
i = 0
j = 0
print("Output:", findPaths(m, n, N, i, j))  # Output: 6
